'''
Nash Equilibria on (Un-)Stable Networks

2020
Anton Badev
anton.badev@gmail.com

PLOTS CTRF EXPERIMENT SPILLOVERS FROM SMALL SCALE POLICY
Input files:
    ctrfSpillovers_scid_1.data
    ctrfSpillovers_scid_7.data
Output files:
    table_ctrfSpills.tex
    table_ctrfSpills_extended.tex
Note output in texdir
    both files ctrfSpillovers_scid_X.data generated by ctrfSpillovers.py
'''




#import os,sys,csv,multiprocessing,functools
import numpy as np
import pandas as pd
import pickle

from libsetups import setupdirs



def main():
    [systime0,pyfilename,pyfiledir,homedir,currentdir,scratchdir,hostname,sysname]=setupdirs()


    ctrfDir = scratchdir + '/../'
    ctrfFiles=[
        'ctrfSpillovers_scid_1.data',
        'ctrfSpillovers_scid_7.data'
        ]
    
    
    texdir  = currentdir + '/../../TeX/'
    texfile = 'table_ctrfSpills.tex'
    texfile_extended = 'table_ctrfSpills_extended.tex'

    jctrfSpills = [None]*len(ctrfFiles)
    for j,ctrfFile in enumerate(ctrfFiles):
        print(f'Opening file: {ctrfFile}')
        with open(ctrfDir+ctrfFile, 'rb') as filehandle:
            [jctrfSpills[j],numsim,grid_nnosmoke,num_nets, size_nets, jattr, jA, jG, target_scid]=pickle.load(filehandle)

    # Estimation scenario: 0,1,2 (Model, Fixed net, No net data)
    ctrfSpills     = pd.concat(jctrfSpills,ignore_index=True)
    ctrfSpills.policy_size         = ctrfSpills.policy_size.astype(int)
    ctrfSpills.estimation_scenario = ctrfSpills.estimation_scenario.astype(int)
    ctrfSpillsSims       = ctrfSpills[ctrfSpills.sim!=0].copy()
    ctrfSpillsData       = ctrfSpills[ctrfSpills.sim==0].copy()
    
    ctrfSpills['weight'] = ctrfSpills['netsize']/np.mean(ctrfSpills['netsize'])
    for jcol in ctrfSpillsSims.columns[3:]:
        ctrfSpillsSims.loc[:,jcol]=ctrfSpillsSims.loc[:,jcol]*ctrfSpills['weight']
    meanSims     = ctrfSpillsSims.groupby(['policy_size', 'estimation_scenario']).mean().reset_index()
    medianSims   = ctrfSpillsSims.groupby(['policy_size', 'estimation_scenario']).median().reset_index()
    meanSimsWide = meanSims.pivot(index='policy_size',columns='estimation_scenario')

    texsignature=f'% tex created by {pyfilename}.py \n'
    texheader = r'''
    \begin{table}[!h]
    \caption{Spillovers}
    \label{table:ctrf-spillovers}
    \begin{center}
    \begin{tabular}{ccccc}
    \multirow{2}{*}{Campaign (\%)}  & \multirow{2}{*}{Smoking}  & \multicolumn{1}{c}{Predicted effect} & Actual & \multirow{2}{*}{Multiplier} \\
    & & proportional & effect \\
     \hline \hline
    '''
    baseline_prev = 100*meanSimsWide.loc[0,('prev',0)]
    table_ctrf= f'- & {baseline_prev:4.1f} & - & - &' + r' \\' + ' \n'
    for j in range(1,len(grid_nnosmoke)):
        mean_smoking_policy_j = 100*meanSimsWide.loc[j,('prev',0)]
        texline = f'{grid_nnosmoke[j]*100:4.0f} & {mean_smoking_policy_j:4.1f}'
        texline = texline + f'& {baseline_prev*grid_nnosmoke[j]:4.1f}' 
        texline = texline + f'& {baseline_prev - mean_smoking_policy_j:4.1f}' 
        texline = texline + f'& {(baseline_prev - mean_smoking_policy_j)/(baseline_prev*grid_nnosmoke[j]):4.1f}' 
        table_ctrf = table_ctrf + texline + r' \\' + ' \n'
        
    texfooter = r'''
    \hline
    \end{tabular}
    \end{center}
    \fignotetitle{Note:} The first column lists the alternative attendance rates. The second and third columns display the smoking rate and the change in smoking rate respectively if the decrease would be proportional to the intervention, i.e. computes a baseline without peer effects. The last column computes the ratio between the percentage change in the number of smokers and the attendance rate. Note that that attendance is random with respect to the smoking status of the students. If the campaign is able to target only students who are currently smokers, the spillover effects will be even larger.
    \end{table}
    '''
    
    texcontent = texsignature + texheader + table_ctrf + texfooter
    with open(texdir+texfile,'w') as f:
         f.write(texcontent)



    # Extended table
    texsignature=f'% tex created by {pyfilename}.py \n'
    texheader = r'''
    \begin{table}[!h]
    \caption{Spillovers}
    \label{table:ctrf-spillovers}
    \begin{center}
    \begin{tabular}{ccccccc}
    \multirow{2}{2cm}{Campaign size (\%)}  
    & \multirow{2}{2cm}{Predicted smoking} 
    & \multicolumn{4}{c}{Predicted effect}
    & \multirow{2}{*}{Multiplier} \\
    & & Model
    & Exog net
    & No network
    & Prop    
    \\
     \hline \hline
    '''
    delta_prev          = 100*meanSimsWide.loc[0,('prev',0)] - 100*meanSimsWide.loc[1:,('prev',0)] #meanCtrfData.prev[0]-meanCtrfData.prev[1:]
    delta_prev_fixednet = 100*meanSimsWide.loc[0,('prev',1)] - 100*meanSimsWide.loc[1:,('prev',1)] #meanCtrfDataFixedNet.prev[0]-meanCtrfDataFixedNet.prev[1:]
    delta_prev_nonet    = 100*meanSimsWide.loc[0,('prev',2)] - 100*meanSimsWide.loc[1:,('prev',2)] #meanCtrfDataNoNet.prev[0]-meanCtrfDataNoNet.prev[1:]
    table_ctrf= f'- & {baseline_prev:4.1f} & - & - & - & - &' + r' \\' + ' \n'
    for j in range(1,len(grid_nnosmoke)):
        mean_smoking_policy_j = 100*meanSimsWide.loc[j,('prev',0)]
        texline = f'{grid_nnosmoke[j]*100:4.0f}'
        texline = texline + f'& {mean_smoking_policy_j:4.1f}'
        texline = texline + f'& {delta_prev[j]:4.1f}'
        texline = texline + f'& {delta_prev_fixednet[j]:4.1f}' 
        texline = texline + f'& {delta_prev_nonet[j]:4.1f}' 
        texline = texline + f'& {mean_smoking_policy_j*grid_nnosmoke[j]:4.1f}' 
        texline = texline + f'& {(baseline_prev - mean_smoking_policy_j)/(baseline_prev*grid_nnosmoke[j]):4.1f}' 
        table_ctrf = table_ctrf + texline + r' \\' + ' \n'
        
    texfooter = r'''
    \hline
    \end{tabular}
    \end{center}
    \fignotetitle{Note:} The first and the second columns list the alternative attendance rates and the simulated smoking prevalences respectively.
    Columns three to six display the simulated decrease in overall smoking for different estimation scenarios:
        the full model, the model with exogenous (fixed) social network, the model with no social network data, and 
        the policy effect if it were (only) proportional to the intervention, i.e. a baseline without peer effects. 
        The last column computes the ratio between the percentage change in the number of smokers and the attendance rate.
        %Note that that attendance is random with respect to the smoking status of the students. 
        %If the campaign is able to target only students who are currently smokers, the spillover effects will be even larger.
    \end{table}
    '''
    
    texcontent = texsignature + texheader + table_ctrf + texfooter
    with open(texdir+texfile_extended,'w') as f:
         f.write(texcontent)

    
    
if __name__ == '__main__':
    main()
